 ### 设置日志级别 ###
 ### 日志信息输出到stdout目的地
 log4j.rootLogger=info,stdout
 ### 输出端是哪种类型，控制台
 log4j.appender.stdout=org.apache.log4j.ConsoleAppender
 ### 输出端的layout是哪种类型，可以灵活地指定布局模式
 log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
 ### 如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
 ### %m 输出代码中指定的消息；
 ### %M 输出打印该条日志的方法名；
 ### %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
 ### %r 输出自应用启动到输出该log信息耗费的毫秒数；
 ### %c 输出所属的类目，通常就是所在类的全名；
 ### %t 输出产生该日志事件的线程名；
 ### %n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
 ### %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
 ### %l 输出日志事件的发生位置，及在代码中的行数；
 ### [QC]是log信息的开头，可以为任意字符，一般为项目简称。
 log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH\:mm\:ss}] %p\t| %m%n
# 格式解释：年-月-日 时：分：秒 日志级别     日志信息 会车

log4j.logger.sys=info, sys
# 每天产生一个日志文件
log4j.appender.sys=org.apache.log4j.DailyRollingFileAppender 
 #保存日志的路径
log4j.appender.sys.File=/Users/web_log/flowsystem/sys.log
# 每天产生文件名的格式
log4j.appender.sys.DatePattern='.'yyyyMMdd'.bak'
log4j.appender.sys.layout=org.apache.log4j.PatternLayout
log4j.appender.sys.layout.ConversionPattern=[%d{yyyy-MM-dd HH\:mm\:ss}] %p\t| %m%n

### 自定义log名称，获取方式Logger.getLogger("qingmai（名字随便取对应就好）");
log4j.logger.ll=info, ll
log4j.appender.ll=org.apache.log4j.DailyRollingFileAppender 
#路劲 
log4j.appender.ll.File=/Users/web_log/flowsystem/ll.log
log4j.appender.ll.DatePattern='.'yyyyMMdd'.bak'
log4j.appender.ll.layout=org.apache.log4j.PatternLayout
log4j.appender.ll.layout.ConversionPattern=[%d{yyyy-MM-dd HH\:mm\:ss}] %p\t| %m%n



